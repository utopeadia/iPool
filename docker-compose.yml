version: '3.8'

services:
  app:
    build: .
    container_name: ipool-app
    restart: always
    ports:
      - "${API_PORT:-8000}:8000"      # API端口
      - "${SOCKS5_PORT:-1080}:1080"   # Socks5代理端口
      - "${HTTP_PROXY_PORT:-8080}:8080" # HTTP代理端口
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - ipool-network
    volumes:
      - ./ipool.log:/app/ipool.log

  postgres:
    image: postgres:14-alpine
    container_name: ipool-postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_DB=${DB_NAME:-ipool}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - ipool-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ipool-redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis-data:/data
    networks:
      - ipool-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  ipool-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
